
1.对象的创建和使用
	-通过一个类可以去实例化N个对象
	-实例化对象的语法： new 类名();
	-new运算符的作用是创建对象，在JVM堆内存中开辟新的内存空间
		*方法区内存：在类字节码加载的时候，class字节码代码片段在此加载
		*栈内存（局部变量）：方法代码片段执行的时候，会给该方法分配内存空间，在栈内存中压栈
		*堆内存：new的对象在堆内存中存储
	-java语言中没有指针，所以不能直接操控堆内存，只能通过“引用”

	-访问实例变量的语法格式
		*读取数据：引用.变量名
		*修改数据：引用.变量名 = 值

2.JVM的内存
	-JVM主要包括三块内存空间
		*栈内存
		*堆内存
		*方法区内存

	-堆内存和方法区内存个各有一个，一个线程一个栈内存

	-方法的调用的时候，该方法所需要的内存空间在栈内存中分配，称为压栈，方法执行结束后释放内存空间，称为弹栈

	-栈中主要存储的是方法体中的局部变量

	-方法的代码片段以及整个类的代码片段都能被存储到方法区内存当中，在类的加载的时候这些代码片段会载入

	-程序执行过程中，通过new运算符创建的java对象，存储在堆内存当中，对象内部有实例变量，所以实例变量存储在堆内存中。

	-变量的分类：“
		*局部变量【方法体中声明】
		*成员变量【方法体外声明】
			-实例变量【前面修饰符列表没有static】
			-静态变量【前面修饰符列表中有static】

	-静态变量存储在方法区内存中。

	-三块内存中变化最频繁的是栈内存，最先有数据的是方法区内存，垃圾回收器针对的是堆内存

	-垃圾回收器【自动垃圾回收机制，GC机制】
		*当堆内存中的java对象成为垃圾数据的时候，会被垃圾回收器回收
		*什么时候java对象会成为垃圾
			-没有更多的引用指向它的时候，这个对象无法访问，因为实例数据只能引用访问

	-java.lang.Null.PionterException
		该错误是指空引用访问“实例”相关数据出现的空指针异常

3.关于java的集成开发环境【集成开发环境简称：IDE】
	3.1什么是集成开发环境
		*集成开发环境是讲究一站式开发，使用这个工具即可，有提示功能，有自动纠错。
		*集成开发环境可以让软件开发更简单高效

	3.2java比较出名的IDE
		*eclipse (myeclipse)【最多】   日食。IBM
		*Intrllij IDEA【上升趋势】
		*NetBean
		*JBuilder
		......

4.myeclipse的使用
	*workspace：工作区
		-当myeclipse打开时，大多数时候会提示选择工作区
		-这个工作区可以是现存的，也可以是新建的
		-选择工作区后。编写的java代码和编译的class文件都在工作区存储
		-MyEclipse可以开启两个及以上的会话，每个会话对应不同的工作区

		-在workspece工作区中有一个 .metadata 文件夹
			*它存储了MyEclipse的工作状态
			*将该文件夹删除后MyEclipse项目丢失，但源文件不会丢

		-MyEclipse工作界面中某个窗口被关了。可以通过windows/show view/other 打开

		-MyEclipse为程序员准备了很多不同的布局方式：
			-企业级开发：javaEE开发的专用布局 - MyEclipse Java Enterprise
			-普通java开发的：javaSE开发的专用布局 - java
			-如何切换布局
				*MyEclipse右上角

		-windows/Reset Perspective 可以重置布局

		-重点窗口介绍
			*Package Explore / Navigator / Project Explore : 可以看到java源文件
			*Console ：控制台窗口

		-工作区workspace中基本的单元是：Project （工程 / 项目）

		-使用MyEclipse
			*在Package Explore窗口右键--new--java project 【javaSE工程】
			*指定Java工程存放的目录
			*java运行时环境：jre的配置【可以选择使用myeclipse自带的jre，也可以选择自己安装的jre】
			*Project layout：工程的目录布局
				-多数情况下选择：两个文件夹存储源码（src）和字节码（bin）

		-在scr目录下新建软件包：packaga机制
			*在src目录上点击右键--new--package
			*给package起名：cyw_java_study
			*包package时java中语法的一部分

		-在软件包先加新建一个java类
			*在包上右键--new--class

		-关于MyEclipse中的快捷键
			*Ctrl + D ：删除一行
			*ALT + / :自动补全
			*Ctrl + 1 :自动纠错
			*Ctrl + Shift + F ：自动格式化【整理格式】

		-注意：MyEclipse的java源代码不保存不会编译

		-MyEclipse中，出现红色下划线表示编译语法错误，鼠标停留会显示错误原因。点击左边的×可以自动纠错。【光标停留在红色下划线处：Ctrl + 1】

		-MyEclipse中，出现黄色标识表示警告，例如声明的变量未使用

		-快捷键的设置
			windoes---Preferences---keys


5.面向对象的分装性
	-封装的好处：
		1.封装好后，对于事物来说，可以避免看到复杂的一面，而可以看到简单的一面。复杂性封装，对外提供简单的操作入口。
		2.封装之后才会形成真正的“独立体”
		3.封装意味着以后的程序可以重复使用。并且这个事物应该适应性较强，在任何场合都可以使用。
		4.封装后，对事物本身，提高了安全性。【安全级别高】

	-封装的步骤
		1.所有属性私有化，使用private关键字进行修饰，private表示私有的，修饰的所有数据只能在本类中访问。
		2.对外提供简单的操作入口，也就是说以后需要访问private类型的数据时，必须通过这些入口。
			-对外提供get方法【读取数据】和set方法【修改数据】
		3.set方法命名规范：
			public void set+属性名称首字母大写(形参){}
			例如：
			public void setAge(int a){
				age = a;
			}

		4.get方法命名规范：
			public 参数类型定义 get+属性名称首字母大写(){}
			例如：
			public int getAge(){
				return age;
			}

		5.快速生成setter和getter
			-右键--Source--Generate Getter and Setter--即可自动扫描private数据进行生成

	-事先了解：
		*setter和agtter方法没有static关键字
		*有static关键字修饰的方法如何调用：类名.方法名(实参)；
		*没有static关键字关键字修饰的方法如何调用：引用.方法名(实参)；

