
1.匿名内部类
    1.1什么是内部类
        *内部类：在类的内部又定义了一个新的类，称为内部类

    1.2内部类的分类
        *静态内部类：类似于静态变量
        *实例内部类：类似于实例变量
        *局部内部类：类似于局部变量

    1.3使用内部类的代码可读性较差，一般不使用

    1.4在对接口进行创建的时候，原来是要定义接口实现类。
        -但是使用匿名内部类，直接在接口名后加(){ 抽象方法实现语句 }
        -这样写代码重复实用性为零，且这样写太复杂，因此不建议使用
        -但以后需要看懂。

    1.5 IDEA纠错快捷键： Alt + enter

2.数组知识
    2.1java语言中的数组是一种引用数据类型，不属于基本数据类型，数组的父亲是Obkect

    2.2数组实际上是一个容器，可以同时容纳多个元素（数组是一个数据的集合）
        -数组：字面意思就是一组数据

    2.3数组当中可以存储基本数据类型，也可以存储引用数据类型

    2.4数组因为是引用数据类型，所以数组对象存储在堆内存中

    2.5对于数组中存储的是对象的话，实际存储的是对象的引用,不可直接存储对象

    2.6数组一旦定义，长度不可变

    2.7数组的分类：一维数组，二维数组，三维数组（极少使用）

    2.8所有数组对象都有length属性，用来获取数组中元素的个数

    2.9java中的数组要求存储的类型统一，比如int类型的只能全部存储int。

    2.10数组在内存方面存储的时候，数组中元素的内存地址是连续的。
        这是数组存储元素的特点，数组实际上是一种简单的数据结构

    2.11所有的数组都是拿第一个内容的内存地址作为整个数组对象的内存地址。

    2.12数组中每一个元素都是有下标的，从0开始到[length - 1]

    2.13数组这种数据结构的优点和缺点
        -优点：查询/查找/检索某个下标的元素时效率极高，可以说是查询效率最高的一个数据结构
            *为什么效率高
                一：每个元素的内存地址在空间存储上是连续的
                二：每个元素的类型相同，所以占用空间大小相同
                三：直到第一个元素的地址，直到每个元素的大小，又知道下标，所以可以计算出某个下标元素的内存地址。
                直接通过内存地址定位，所以数组的检索效率最高。

        -缺点：
            一：由于为了保证每个数据的内存地址连续，所以在数组中增删元素会比较麻烦，因为要考虑后面所有元素的移动问题。
            二：无法存储大容量数据，因为在内存中很难找到大块连续的内存。

    2.14声明一个一维数组：
        语法格式：
            int[] array1;
            double[] array2;
            String[] array3;
            Object[] array4;

    2.15如何初始化一个一维数组：
        -静态初始化
            int[] array = {1,2,5,6};
            *当创建数组的时候，确认数组中的数据的时候，用静态初始化方式

        -动态初始化
            int[] array = new int[5];
            *这的5表示数组长度
            *这句表示的是初始化5个长度的int类型数组，每个元素默认是0

    2.16在main方法中有定义一个String[] args数组，这个数组是用来储存JVM返回是数据
        -例如运行：java ArrayTest01 abc def jhx
        -JVM会自动将后面的的数据以空格分开，存储到args数组中
        -则 abc def jhx 会转换成字符串数组：{"abc","def","jhx"}

3.数组的深入
    3.1数组中存储的类型为：引用数据类型

    3.2数组的扩容
        *建立一个大数组
        *将原数组中的数据拷贝过去
        **因此数组扩容效率低

    3.3数组的拷贝
        *已经准备好了数组拷贝函数
            System.arraycopy()；

4.二维数组
    4.1二维数组其实是一个特殊的一维数组，只是这个一维数组中的每个元素都是一个一维数组

    4.2三维数组呢：
        -三维数组就是一个特殊的二维数组，特殊在这个二维数组中每个元素是一个一维数组

    4.3二维数组静态初始化
        例如： int[][] array = { {1,1,2},{2,2,3},{3,4,5} }
